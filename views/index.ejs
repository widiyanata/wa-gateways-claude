<!-- views/dashboard.ejs -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= title %></title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css"
    />
    <style>
      .session-card {
        transition: all 0.3s;
      }
      .session-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
      }
      .online-indicator {
        width: 10px;
        height: 10px;
        border-radius: 50%;
        display: inline-block;
        margin-right: 5px;
      }
      .online {
        background-color: #28a745;
      }
      .offline {
        background-color: #dc3545;
      }
    </style>
  </head>
  <body class="bg-light">
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
      <div class="container">
        <a class="navbar-brand" href="/">WA Gateway</a>
        <button
          class="navbar-toggler"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target="#navbarNav"
        >
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
          <ul class="navbar-nav me-auto">
            <li class="nav-item">
              <a class="nav-link active" href="/">Dashboard</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/documentation">API Docs</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/settings">Settings</a>
            </li>
          </ul>
        </div>
      </div>
    </nav>

    <div class="container py-4">
      <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>WhatsApp Sessions</h1>
        <a href="/create-session" class="btn btn-primary">
          <i class="bi bi-plus-circle"></i> Create New Session
        </a>
      </div>

      <div class="row">
        <template v-if="loading">
          <div class="col-12 text-center py-5">
            <div class="spinner-border text-primary" role="status">
              <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-2">Loading sessions...</p>
          </div>
        </template>

        <template v-else>
          <template v-if="sessions.length === 0">
            <div class="col-12 text-center py-5">
              <i class="bi bi-whatsapp text-muted" style="font-size: 4rem"></i>
              <h3 class="mt-3">No WhatsApp Sessions Yet</h3>
              <p>Click "Create New Session" to connect a WhatsApp account.</p>
            </div>
          </template>

          <template v-else>
            <div v-for="session in sessions" :key="session.id" class="col-md-4 mb-4">
              <div class="card session-card h-100">
                <div class="card-body">
                  <div class="d-flex justify-content-between align-items-center mb-3">
                    <h5 class="card-title m-0">
                      <span
                        class="online-indicator"
                        :class="session.connected ? 'online' : 'offline'"
                      ></span>
                      {{ session.id }}
                    </h5>
                    <span class="badge" :class="session.connected ? 'bg-success' : 'bg-danger'">
                      {{ session.connected ? "Online" : "Offline" }}
                    </span>
                  </div>

                  <p class="card-text" v-if="session.user">
                    <strong>Phone:</strong> {{ session.user.id.split("@")[0] }}<br />
                    <strong>Name:</strong> {{ session.user.name || "Not available" }}
                  </p>
                  <p class="card-text" v-else>Not connected</p>
                </div>
                <div class="card-footer bg-transparent">
                  <div class="d-flex justify-content-between">
                    <a :href="`/session/${session.id}`" class="btn btn-sm btn-primary">
                      <i class="bi bi-eye"></i> Details
                    </a>
                    <div>
                      <button
                        @click="logoutSession(session.id)"
                        class="btn btn-sm btn-warning logout-btn"
                      >
                        <i class="bi bi-box-arrow-right"></i> Logout
                      </button>
                      <button
                        @click="showDeleteModal(session.id)"
                        class="btn btn-sm btn-danger delete-btn"
                      >
                        <i class="bi bi-trash"></i> Delete
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </template>
        </template>
      </div>
    </div>
    <!-- Delete Session Modal -->
    <div class="modal fade" id="deleteSessionModal" tabindex="-1">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Delete Session</h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <p>Are you sure you want to delete this session? This action cannot be undone.</p>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
          </div>
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
      const { createApp } = Vue;

      createApp({
        data() {
          return {
            loading: true,
            sessions: [],
            selectedSessionId: null,
            deleteModal: null,
          };
        },

        mounted() {
          this.deleteModal = new bootstrap.Modal(document.getElementById("deleteSessionModal"));
          this.loadSessions();
          this.initSocket();

          document.getElementById("confirmDeleteBtn").addEventListener("click", this.confirmDelete);
        },

        methods: {
          async loadSessions() {
            try {
              const response = await fetch("/api/sessions");
              const data = await response.json();

              if (data.success) {
                this.sessions = data.data;
              }
            } catch (error) {
              console.error("Error loading sessions:", error);
            } finally {
              this.loading = false;
            }
          },

          async logoutSession(sessionId) {
            try {
              const response = await fetch(`/api/sessions/${sessionId}/logout`, {
                method: "POST",
              });

              const data = await response.json();
              if (data.success) {
                this.loadSessions();
              }
            } catch (error) {
              console.error("Error logging out session:", error);
            }
          },

          showDeleteModal(sessionId) {
            this.selectedSessionId = sessionId;
            this.deleteModal.show();
          },

          async confirmDelete() {
            if (this.selectedSessionId) {
              try {
                const response = await fetch(`/api/sessions/${this.selectedSessionId}`, {
                  method: "DELETE",
                });

                const data = await response.json();
                if (data.success) {
                  this.loadSessions();
                }
              } catch (error) {
                console.error("Error deleting session:", error);
              }
              this.deleteModal.hide();
              this.selectedSessionId = null;
            }
          },

          initSocket() {
            const socket = io();
            socket.on("session.update", () => {
              this.loadSessions();
            });
          },
        },
      }).mount("#app");
    </script>
  </body>
</html>
